version: 2.1
orbs:
  heroku: circleci/heroku@0.0.8
  jq: circleci/jq@1.9.0
workflows:
  build_deploy:
    jobs:
      - build
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - deploy_prod:
          requires:
            - build
          filters:
            branches:
              only: master
jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: npm install 
      - run: mkdir junit
      - run: npm install mocha-junit-reporter # just for CircleCI
      - run: npm run report-mocha
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit
  deploy_staging:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git
  deploy_prod:
    executor: heroku/default
    steps:
      - checkout
      - jq/install
      - run:
          name: Create GitHub Deployment
          command: |
            GH_URL="https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/deployments"
            GH_RESPONSE=$(curl -X POST -H "Accept: application/vnd.github.ant-man-preview+json" -H "Authorization: token $GITHUB_TOKEN" --data '{"ref":  $CIRCLE_SHA1, "environment": "production", "required_contexts": []}' $GH_URL |  jq --raw-output '.id')
            echo "GitHub Deployment ID: $GH_RESPONSE from $GH_URL"
            echo "export GITHUB_DEPLOY_ID=$GH_RESPONSE" >> $BASH_ENV
      - heroku/install
      - heroku/deploy-via-git: 
          app-name: $HEROKU_APP_NAME_PROD
      - run:
          name: Set Successful GitHub Deployment Status
          command: |
            GH_URL="https://api.github.com/repos/pjawesome/workshop-tonkotsu-nodejs/deployments/$GITHUB_DEPLOY_ID/statuses"
            GH_RESPONSE=$(curl -X POST -H "Accept: application/vnd.github.ant-man-preview+json" -H "Authorization: token $GITHUB_TOKEN" --data '{"state": "success", "environment": "production"}' $GH_URL)
            echo "GitHub API Status: $GH_RESPONSE"
          when: on_success
      - run:
          name: Set Successful GitHub Deployment Status
          command: |
            GH_URL="https://api.github.com/repos/pjawesome/workshop-tonkotsu-nodejs/deployments/$GITHUB_DEPLOY_ID/statuses"
            GH_RESPONSE=$(curl -X POST -H "Accept: application/vnd.github.ant-man-preview+json" -H "Authorization: token $GITHUB_TOKEN" --data '{"state": "error", "environment": "production"}' $GH_URL)
            echo "GitHub API Status: $GH_RESPONSE"
          when: on_fail
        
      
     


